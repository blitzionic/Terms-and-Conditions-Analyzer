'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var HARRequest = function () {
  function HARRequest(request) {
    var _this = this;

    _classCallCheck(this, HARRequest);

    var request = request || {};

    this.method = request.method;
    this.httpVersion = request.httpVersion;
    this.queryString = request.queryString;
    this.cookies = request.cookies;
    this.headersSize = request.headersSize;
    this.bodySize = request.bodySize;
    this.url = _url2.default.parse(request.url);
    this.headers = {};

    request.headers && request.headers.forEach(function (hdr) {
      _this.headers[hdr.name] = hdr.value;
    });
  }

  _createClass(HARRequest, [{
    key: 'getMethodForRoute',
    value: function getMethodForRoute() {
      return this.method && this.method.toLowerCase();
    }
  }, {
    key: 'getPathname',
    value: function getPathname() {
      return this.url.pathname;
    }
  }]);

  return HARRequest;
}();

exports.default = HARRequest;